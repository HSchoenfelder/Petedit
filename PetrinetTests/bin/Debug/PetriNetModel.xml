<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PetriNetModel</name>
    </assembly>
    <members>
        <member name="T:PetriNetModel.Arc">
            <summary>
            This class represents an arc in the petrinet.
            </summary>
        </member>
        <member name="F:PetriNetModel.Arc._id">
            <summary> Store for the Id property. </summary>
        </member>
        <member name="F:PetriNetModel.Arc._source">
            <summary> Store for the Source property. </summary>
        </member>
        <member name="F:PetriNetModel.Arc._target">
            <summary> Store for the Target property. </summary>
        </member>
        <member name="M:PetriNetModel.Arc.#ctor(PetriNetModel.Node,PetriNetModel.Node,System.String)">
            <summary>
            Initializes a new instance of the Arc class with the specified source, target and id. 
            </summary>
            <param name="source">The source node of the new arc.</param>
            <param name="target">The target node of the new arc.</param>
            <param name="id">The id of the new arc.</param>
        </member>
        <member name="M:PetriNetModel.Arc.GetSourceId">
            <summary>
            Gets the id of the source of the arc.
            </summary>
        </member>
        <member name="M:PetriNetModel.Arc.GetTargetId">
            <summary>
            Gets the id of the target of the arc.
            </summary>
        </member>
        <member name="M:PetriNetModel.Arc.Remove(PetriNetModel.CallbackDelegates.TransitionStateChanged)">
            <summary>
            Removes the arc from the petrinet sends notification if a state change is caused.
            </summary>
            <param name="callback">The method to be called in case a state change is caused.</param>
        </member>
        <member name="M:PetriNetModel.Arc.Equals(System.Object)">
            <summary>
            Determines whether this arc and a specified object have the same value.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns></returns>
        </member>
        <member name="M:PetriNetModel.Arc.GetHashCode">
            <summary>
            Returns the hash code for this arc.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PetriNetModel.Arc.Id">
            <summary> Gets the Id that uniquely identifies this arc. </summary>
        </member>
        <member name="P:PetriNetModel.Arc.Source">
            <summary> Gets or sets the source node of this arc. </summary>
        </member>
        <member name="P:PetriNetModel.Arc.Target">
            <summary> Gets or sets the target node of this arc. </summary>
        </member>
        <member name="T:PetriNetModel.Node">
            <summary>
            This class represents a node in the petrinet.
            </summary>
        </member>
        <member name="F:PetriNetModel.Node._id">
            <summary> Store for the <see cref="P:PetriNetModel.Node.Id"/>Id property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._name">
            <summary> Store for the Name property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._x">
            <summary> Store for the X property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._y">
            <summary> Store for the Y property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._predecessors">
            <summary> Store for the Prececessors property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._successors">
            <summary> Store for the Successors property. </summary>
        </member>
        <member name="F:PetriNetModel.Node._arcs">
            <summary> This list manages all arcs from and to this Node. </summary>
        </member>
        <member name="M:PetriNetModel.Node.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Node class with the specified coordinates and id. 
            </summary>
            <param name="x">The x-coordinate of the new node.</param>
            <param name="y">The y-coordinate of the new node.</param>
            <param name="id">The id of the new node.</param>
        </member>
        <member name="M:PetriNetModel.Node.AddArc(PetriNetModel.Arc)">
            <summary>
            Adds the specified arc to the node.
            </summary>
            <param name="addedArc">The arc to be added to the node.</param>
        </member>
        <member name="M:PetriNetModel.Node.RemoveArc(PetriNetModel.Arc)">
            <summary>
            Removes the specified arc from the node.
            </summary>
            <param name="deletedArc">The arc to be removed from the node.</param>
        </member>
        <member name="M:PetriNetModel.Node.GetArcList">
            <summary>
            Returns a list with the ids of all the arcs for this node.
            </summary>
            <returns>A list with the ids of all the arcs for this node.</returns>
        </member>
        <member name="M:PetriNetModel.Node.AddPredecessor(PetriNetModel.Node)">
            <summary>
            Adds the specified node as a predecessor of this node.
            </summary>
            <param name="predecessor">The node to be added as a predecessor.</param>
        </member>
        <member name="M:PetriNetModel.Node.RemovePredecessor(PetriNetModel.Node)">
            <summary>
            Removes the specified node as a predecessor for this node.
            </summary>
            <param name="deletedNode">The node to be removed as a predecessor.</param>
        </member>
        <member name="M:PetriNetModel.Node.AddSuccessor(PetriNetModel.Node)">
            <summary>
            Adds the specified node as a successor of this node.
            </summary>
            <param name="successor">The node to be added as a successor.</param>
        </member>
        <member name="M:PetriNetModel.Node.RemoveSuccessor(PetriNetModel.Node)">
            <summary>
            Removes the specified node as a successor for this node.
            </summary>
            <param name="deletedNode">The node to be removed as a successor.</param>
        </member>
        <member name="M:PetriNetModel.Node.Equals(System.Object)">
            <summary>
            Determines whether the specified object is a Node and whether it contains the same id as this node.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>true if obj is a Node and contains the same id as this Node; otherwise false</returns>
        </member>
        <member name="M:PetriNetModel.Node.GetHashCode">
            <summary>
            Returns the hash code for this node.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PetriNetModel.Node.Id">
            <summary> Gets the Id that uniquely identifies this Node. </summary>
            <value> The id of this Node. </value>
        </member>
        <member name="P:PetriNetModel.Node.Name">
            <summary> Gets or sets the name of this node. </summary>
            <value> The name of this Node. </value>
        </member>
        <member name="P:PetriNetModel.Node.X">
            <summary> Gets or sets the x-coordinate of this node. </summary>
        </member>
        <member name="P:PetriNetModel.Node.Y">
            <summary> Gets or sets the y-coordinate of this node. </summary>
        </member>
        <member name="P:PetriNetModel.Node.Predecessors">
            <summary> Gets a list of all predecessors of this node. </summary>
        </member>
        <member name="P:PetriNetModel.Node.Successors">
            <summary> Gets a list of all successors of this node. </summary>
        </member>
        <member name="T:PetriNetModel.Place">
            <summary>
            This class represents a place in the petrinet.
            </summary>
        </member>
        <member name="F:PetriNetModel.Place._tokenCount">
            <summary> Store for the TokenCount property. </summary>
        </member>
        <member name="M:PetriNetModel.Place.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Place class with the specified coordinates and id. 
            </summary>
            <param name="x">The x-coordinate of the new place.</param>
            <param name="y">The y-coordinate of the new place.</param>
            <param name="id">The id of the new place.</param>
        </member>
        <member name="M:PetriNetModel.Place.ChangeTokenCount(System.Int32,PetriNetModel.CallbackDelegates.TransitionStateChanged)">
            <summary>
            Changes the amount of tokens to the amount provided and sends notification if a state change is caused.
            </summary>
            <param name="callback">The method to be called in case a state change is caused.</param>
        </member>
        <member name="M:PetriNetModel.Place.CheckForActivatedTransitions(PetriNetModel.CallbackDelegates.TransitionStateChanged)">
            <summary>
            Activates transitions if the amount of tokens has changed from zero.
            Sends notification if a transition has been activated.
            </summary>
            <param name="callback">The method to be called in case a transition has been activated.</param>
        </member>
        <member name="M:PetriNetModel.Place.CheckForDeactivatedTransitions(PetriNetModel.CallbackDelegates.TransitionStateChanged)">
            <summary>
            Deactivates transitions if the amount of tokens has changed to zero.
            Sends notification if a transition has been deactivated.
            </summary>
            <param name="callback">The method to be called in case a transition has been deactivated.</param>
        </member>
        <member name="P:PetriNetModel.Place.TokenCount">
            <summary> Gets the current amount of tokens on this place. </summary>
        </member>
    </members>
</doc>
